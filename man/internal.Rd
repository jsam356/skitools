% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/skitools.R
\name{jabba.gwalk}
\alias{jabba.gwalk}
\alias{jgraph}
\alias{jab2json}
\alias{karyotrack}
\alias{ra_tier}
\alias{rebin}
\title{jabba.gwalk}
\usage{
jabba.gwalk(jab, verbose = FALSE, return.grl = TRUE)

jgraph(jab, thresh_cl = 1e+06, all = FALSE, thresh_r = 1000, clusters = FALSE)

jab2json(jab, file, maxcn = 100, maxweight = 100)

karyotrack(kag, paths = NULL, col = "red", pad = 0)

ra_tier(
  dra,
  min.score1 = 10,
  min.score2 = 4,
  min.treads1 = 10,
  min.treads2 = 3,
  max.nreads = Inf
)

rebin(cov, binwidth, field = names(values(cov))[1], FUN = mean, na.rm = TRUE)
}
\arguments{
\item{jab}{input jab object}

\item{file}{output json file}

\item{kag}{output of karyograph}

\item{paths}{GRanges or GRangesList}

\item{cov}{GRanges of binned genome-wide coverage}

\item{binwidth}{new binwidth}
}
\value{
GRangesList of walks with copy number as field $cn, cyclic walks denoted as field $is.cycle == TRUE, and $wid (width) and $len (segment length) of walks as additional metadata#'

gTrack of karyograph with particular nodes / edges colored with specified colors

GRanges of binned genome-wide coverage at new bin
}
\description{
Computes greedy collection (i.e. assembly) of genome-wide walks (graphs and cycles) by finding shortest paths in JaBbA graph.

takes in a jabba object and threshold for clusters and "quasi-reciprocal"
junctions

Dumps JaBbA graph into json

Classify full set of dRanger rearrangements into "tiers" of confidence

(1) Tier 1 BPresult>0 and somatic_score>min.score1
(2) Tier 2 BPresult=0 and somatic_score>min.score1
(3) Tier 3 min.score2<=somatic_score<=min.score2 & tumreads>min.reads

Given GRanges of bins will aggregate around new bin width.
}
\details{
Takes karyograph and outputs gTrack +/- highlighting of one or more paths defined as GRanges or GRangesList (for multiple paths)
Edges will only be highlighted when the exact interval pair corresponding to the edge is included in
the graph
}
\author{
Marcin Imielinski

Xiaotong Yao
first peel off "simple" paths i.e. zero degree
ends with >0 copy number
so now we want to subtract that cn units of that path from the graph
so we want to update the current adjacency matrix to remove that path
while keeping track of of the paths on the stack
then find paths that begin at a node and end at (one of its) immediate upstream neighbors
this will be a path for whom col index is = parent(row) for one of the rows
so now we want to subtract that cn units of that path from the graph
so we want to update the current adjacency matrix to remove that path
while keeping track of of the cycles on the stack

Marcin Imielinski
++ = RL
+- = RR
-+ = LL

Marcin Imielinski
}
